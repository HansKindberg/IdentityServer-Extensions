{
	"ApiResources": [
		{
			"Name": "role-service",
			"Description": "The api-resource to get roles for authorization.",
			"DisplayName": "Role-service",
			"Emphasize": true,
			"Scopes": [
				"role-service"
			],
			"UserClaims": [
				"name",
				"upn"
			]
		},
		{
			"DisplayName": "Resource #1",
			"Name": "resource1",
			"Scopes": [
				"resource1.scope1",
				"shared.scope"
			]
		},
		{
			"DisplayName": "Resource #2",
			"Name": "resource2",
			"Scopes": [
				"resource2.scope1",
				"shared.scope"
			],
			"UserClaims": [
				"email",
				"name"
			]
		}
	],
	"ApiScopes": [
		{
			"Description": "The scope to get roles for authorization.",
			"DisplayName": "Role-service",
			"Name": "role-service"
		},
		{
			"Name": "IdentityServerApi"
		},
		{
			"Name": "resource1.scope1"
		},
		{
			"Name": "resource2.scope1"
		},
		{
			"Name": "scope3"
		},
		{
			"Name": "shared.scope"
		},
		{
			"Description": "A transaction",
			"DisplayName": "Transaction",
			"Name": "transaction"
		}
	],
	"Authentication": {
		"ActiveLoginOptions": {
			"ApiKey": "abcd",
			"BankIdServiceKey": "abcd",
			"BankIdUseQrCode": true,
			"ClientCertificate": {
				"Options": {
					"Password": "qwerty123",
					"Path": "Data/BankId-Test-Client.pfx"
				},
				"Type": "RegionOrebroLan.Security.Cryptography.Configuration.FileResolverOptions, RegionOrebroLan"
			},
			" - Possible environment values": "Production, Simulated or Test",
			"Environment": "Simulated",
			"RootCertificate": {
				"Options": {
					"Path": "CERT:\\LocalMachine\\Root\\b581b136673317a3422d2e4b4f6bf3f77af34798"
				},
				"Type": "RegionOrebroLan.Security.Cryptography.Configuration.StoreResolverOptions, RegionOrebroLan"
			},
			"SimulatedPerson": {
				"GivenName": "Jocke",
				"Surname": "med Kniven"
			}
		},
		"CallbackDecorators": {
			"ActiveDirectoryCallbackDecorator": {
				"AuthenticationSchemes": {
					"SithsCertificate": 100
				},
				"Type": "RegionOrebroLan.Web.Authentication.Decoration.ActiveDirectoryCallbackDecorator, RegionOrebroLan.Web.Authentication"
			}
		},
		" - Comment": "Explain the path thing.",
		"CommonOptions": {
			"Default": {
				"ForwardSignOut": "idsrv"
			}
		},
		"SchemeRegistrations": {
			"BankIdOtherDevice": {
				"CommonOptionsPaths": [
					"Authentication:ActiveLoginOptions"
				],
				"DisplayName": "Bank-ID (other device)",
				"Icon": "bankid",
				"Options": {

				},
				"Type": "RegionOrebroLan.ActiveLogin.Authentication.Configuration.Registration.BankIdOtherDeviceRegistrator, RegionOrebroLan.ActiveLogin.Authentication"
			},
			"BankIdSameDevice": {
				"CommonOptionsPaths": [
					"Authentication:ActiveLoginOptions"
				],
				"DisplayName": "Bank-ID (same device)",
				"Icon": "bankid",
				"Type": "RegionOrebroLan.ActiveLogin.Authentication.Configuration.Registration.BankIdSameDeviceRegistrator, RegionOrebroLan.ActiveLogin.Authentication"
			},
			"Certificate": {
				" - Note - ": "This is for IdentityServer MTLS. No validation-criteria here because client-secrets should be used for validation.",
				" - CommonOptionsPaths": [
					"Authentication:CommonOptions:DefaultCertificateOptions"
				],
				"Interactive": false,
				"Options": {
					"Validator": {
						"AllowedCertificateKinds": "All",
						"Chained": {
							" - CustomTrustChecking": true,
							"RevocationMode": "NoCheck",
							" - TrustedRootCertificateResolvers": [
								{
									"Options": {
										"Path": "Data/Test-IdentityServer-Root-CA.cer"
									},
									"Type": "RegionOrebroLan.Security.Cryptography.Configuration.FileResolverOptions, RegionOrebroLan"
								}
							]
						}
					}
				},
				"Type": "RegionOrebroLan.Web.Authentication.Configuration.Registration.CertificateRegistrator, RegionOrebroLan.Web.Authentication"
			},
			"GoogleOAuth": {
				"CommonOptionsPaths": [
					"Authentication:CommonOptions:Default"
				],
				"DisplayName": "Google (OAuth)",
				"Enabled": false,
				"Icon": "google",
				"Options": {
					"ClientId": "260174815090-v4u9lb79btv3pbss9tk9qupvqq0voo7s.apps.googleusercontent.com",
					"ClientSecret": "og6x3CQba47eSpa5XhBJmUui"
				},
				"Type": "RegionOrebroLan.Web.Authentication.Configuration.Registration.GoogleRegistrator, RegionOrebroLan.Web.Authentication"
			},
			"Google": {
				"CommonOptionsPaths": [
					"Authentication:CommonOptions:Default"
				],
				"DisplayName": "Google",
				"Icon": "google",
				"Options": {
					"Authority": "https://accounts.google.com/",
					"CallbackPath": "/signin-google",
					"ClientId": "260174815090-v4u9lb79btv3pbss9tk9qupvqq0voo7s.apps.googleusercontent.com",
					"Scope": [
						"email"
					]
				},
				"Type": "RegionOrebroLan.Web.Authentication.Configuration.Registration.OpenIdConnectRegistrator, RegionOrebroLan.Web.Authentication"
			},
			"GrandIdBankIdChooseDevice": {
				"CommonOptionsPaths": [
					"Authentication:ActiveLoginOptions"
				],
				"DisplayName": "Grand-ID (choose device)",
				"Icon": "grandid",
				"Type": "RegionOrebroLan.ActiveLogin.Authentication.Configuration.Registration.GrandIdChooseDeviceRegistrator, RegionOrebroLan.ActiveLogin.Authentication"
			},
			"GrandIdBankIdOtherDevice": {
				"CommonOptionsPaths": [
					"Authentication:ActiveLoginOptions"
				],
				"DisplayName": "Grand-ID (other device)",
				"Icon": "grandid",
				"Type": "RegionOrebroLan.ActiveLogin.Authentication.Configuration.Registration.GrandIdOtherDeviceRegistrator, RegionOrebroLan.ActiveLogin.Authentication"
			},
			"GrandIdBankIdSameDevice": {
				"CommonOptionsPaths": [
					"Authentication:ActiveLoginOptions"
				],
				"DisplayName": "Grand-ID (same device)",
				"Icon": "grandid",
				"Type": "RegionOrebroLan.ActiveLogin.Authentication.Configuration.Registration.GrandIdSameDeviceRegistrator, RegionOrebroLan.ActiveLogin.Authentication"
			},
			"IdentityServerDemo": {
				"Icon": "identity-server",
				"Options": {
					"Authority": "https://demo.identityserver.io/",
					"CallbackPath": "/signin-idsrv",
					"ClientId": "login",
					"RemoteSignOutPath": "/signout-idsrv",
					"ResponseType": "id_token",
					"SaveTokens": true,
					"SignedOutCallbackPath": "/signout-callback-idsrv",
					"TokenValidationParameters": {
						"NameClaimType": "name",
						"RoleClaimType": "role"
					}
				},
				"SignOutSupport": true,
				"Type": "RegionOrebroLan.Web.Authentication.Configuration.Registration.OpenIdConnectRegistrator, RegionOrebroLan.Web.Authentication"
			},
			"Microsoft": {
				"CommonOptionsPaths": [
					"Authentication:CommonOptions:Default"
				],
				"Options": {
					"ClientId": "2dadf463-b32c-4602-9866-d5a08b2eb94f",
					"ClientSecret": "/O9Y3xO=@4bflHfh@Vd68tlpscYR]ZWL"
				},
				"Type": "RegionOrebroLan.Web.Authentication.Configuration.Registration.MicrosoftAccountRegistrator, RegionOrebroLan.Web.Authentication"
			},
			"SithsCertificate": {
				"DisplayName": "SITHS-certificate",
				"Icon": "net-id",
				"Options": {
					"Validator": {
						"AllowedCertificateKinds": "Chained",
						"Chained": {
							"Matching": {
								"Criteria": [
									{
										"PropertyName": "Issuer",
										"ValuePattern": "CN=SITHS e-id*"
									}
								]
							}
						}
					}
				},
				"Type": "RegionOrebroLan.Web.Authentication.Configuration.Registration.CertificateRegistrator, RegionOrebroLan.Web.Authentication"
			},
			"Windows": {
				"Type": "RegionOrebroLan.Web.Authentication.Configuration.Registration.WindowsRegistrator, RegionOrebroLan.Web.Authentication"
			}
		}
	},
	"Authorization": {
		"MiddlewareEnabled": false,
		"Policy": {
			"Permissions": [
				{
					"Name": "Administrator",
					"Roles": [ "Administrators" ]
				}
			],
			"Roles": [
				{
					"Name": "Administrators",
					"Users": [ "40f297bb-47eb-464b-bb07-80b1ec3f862d" ]
				}
			]
		},
		"Roles": {
			"Providers": [
				"HansKindberg.Web.Authorization.WindowsRoleProvider, HansKindberg.Web.Authorization"
			],
			"Windows": {
				"CacheEnabled": true
			}
		}
	},
	"Clients": [
		{
			"AllowedGrantTypes": [ "urn:ietf:params:oauth:grant-type:device_code" ],
			"AllowedScopes": [ "email", "openid", "profile", "resource1.scope1", "resource2.scope1" ],
			"AllowOfflineAccess": true,
			"ClientId": "device",
			"ClientName": "Device",
			"ClientSecrets": [
				{
					"Description": "Secret to validate that the client-certificate is issued by \"Test-IdentityServer Root CA\"",
					"Type": "X509Issuer",
					"Value": "CN=Test-IdentityServer Root CA"
				}
			],
			"Description": "Client for testing device flow.",
			"RequireClientSecret": false
		},
		{
			"AllowedGrantTypes": [ "authorization_code", "client_credentials" ],
			"AllowedScopes": [ "openid", "profile", "resource1.scope1", "resource1.scope2" ],
			"ClientId": "interactive_client",
			"ClientSecrets": [ { "Value": "K7gNU3sdo+OL0wNhqoVWhr3g6s1xYv72ol/pe/Unols=" } ],
			"RedirectUris": [ "https://localhost:5008/" ]
		},
		{
			"AllowedGrantTypes": [ "client_credentials" ],
			"AllowedScopes": [ "resource1.scope1", "resource1.scope2" ],
			"Claims": [
				{
					"type": "c1",
					"value": "c1-value"
				},
				{
					"type": "c2",
					"value": "c2-value"
				}
			],
			"ClientId": "machine_client",
			"ClientSecrets": [ { "Value": "K7gNU3sdo+OL0wNhqoVWhr3g6s1xYv72ol/pe/Unols=" } ],
			"Properties": { "foo": "bar" }
		},
		{
			"AllowedGrantTypes": [ "authorization_code" ],
			"AllowOfflineAccess": true,
			"AllowedScopes": [ "email", "offline_access", "openid", "profile", "role-service" ],
			"ClientId": "mvc-windows",
			"ClientName": "ASP.NET Core MVC Windows",
			"ClientSecrets": [ { "Value": "K7gNU3sdo+OL0wNhqoVWhr3g6s1xYv72ol/pe/Unols=" } ],
			"ClientUri": "https://localhost:5001/",
			"EnableLocalLogin": false,
			"FrontChannelLogoutUris": [ "https://localhost:5001/signout-oidc" ],
			"IdentityProviderRestrictions": [ "SithsCertificate", "Windows" ],
			"PostLogoutRedirectUris": [ "https://localhost:5001/signout-callback-oidc" ],
			"RedirectUris": [ "https://localhost:5001/signin-oidc" ],
			"RequireConsent": true
		},
		{
			"AllowedGrantTypes": [ "client_credentials" ],
			"AllowedScopes": [ "resource1.scope1", "resource2.scope1" ],
			"ClientId": "MTLS-Test",
			"ClientSecrets": [
				{
					"Description": "Secret to validate that the client-certificate is issued by \"Test-IdentityServer Root CA\"",
					"Type": "X509Issuer",
					"Value": "CN=Test-IdentityServer Root CA"
				}
			],
			"Description": "Client for testing mutual transport layer security."
		}
	],
	"ConnectionStrings": {
		"DataProtection": "Data Source=|DataDirectory|Data-Protection.db",
		"IdentityServer": "Data Source=|DataDirectory|Identity-Server.db"
	},
	"Data": {
		"Provider": "Sqlite"
	},
	"DataProtection": {
		"Options": {
			" - ConnectionStringName-information": "The default connection-string-name is DataProtection. To use the IdentityServer database change the row below to: 'ConnectionStringName': 'IdentityServer'. That is, remove the leading ' - '.",
			" - ConnectionStringName": "IdentityServer",
			"KeyProtection": {
				"Options": {
					"CertificateResolver": {
						"Options": {
							"Password": "password",
							"Path": "Data/Development-Key-Protection-Certificate.pfx"
						},
						"Type": "RegionOrebroLan.Security.Cryptography.Configuration.FileResolverOptions, RegionOrebroLan"
					}
				},
				"Type": "HansKindberg.IdentityServer.DataProtection.Configuration.KeyProtection.CertificateOptions, HansKindberg.IdentityServer"
			}
		},
		"Type": "HansKindberg.IdentityServer.DataProtection.Configuration.SqliteOptions, HansKindberg.IdentityServer"
	},
	"Enabled": true,
	"ExceptionHandling": {
		"DeveloperExceptionPage": true
	},
	"FeatureManagement": {
		"DataDirectory": true,
		"DataSeeding": true,
		"DataTransfer": true,
		"Debug": true,
		"Development": true,
		"Diagnostics": true,
		"FormsAuthentication": true,
		"Home": true,
		"SecurityHeaders": true
	},
	"IdentityResources": [
		{
			"DisplayName": "Email-address",
			"Emphasize": true,
			"Name": "email",
			"UserClaims": [ "email", "email_verified" ]
		},
		{
			"DisplayName": "User-identifier",
			"Name": "openid",
			"Required": true,
			"UserClaims": [ "sub" ]
		},
		{
			"DisplayName": "User-profile",
			"Description": "User-profile information (first name, last name, etc.)",
			"Emphasize": true,
			"Name": "profile",
			"UserClaims": [
				"birthdate",
				"certserialnumber",
				"certthumbprint",
				"family_name",
				"gender",
				"given_name",
				"locale",
				"middle_name",
				"name",
				"nickname",
				"picture",
				"preferred_username",
				"primarysid",
				"profile",
				"updated_at",
				"upn",
				"website",
				"winaccountname",
				"zoneinfo"
			]
		}
	],
	"IdentityServer": {
		"MutualTls": {
			" - DomainName": "mtls",
			"Enabled": true
		},
		"SigningCertificate": {
			"Options": {
				"Password": "password",
				"Path": "Data/Development-Signing-Certificate.pfx"
			},
			"Type": "RegionOrebroLan.Security.Cryptography.Configuration.FileResolverOptions, RegionOrebroLan"
		},
		" - ValidationCertificates": [
			{
				"Options": {
					"Password": "password",
					"Path": "Data/Development-Signing-Certificate.pfx"
				},
				"Type": "RegionOrebroLan.Security.Cryptography.Configuration.FileResolverOptions, RegionOrebroLan"
			}
		]
	},
	"Localization": {
		"AlphabeticalSorting": true,
		"FileResourcesDirectoryPath": "Resources",
		"IncludeParentCultures": true,
		"ThrowErrors": false
	},
	"Logging": {
		"LogLevel": {
			"Default": "Debug",
			"Microsoft": "Debug",
			"Microsoft.Hosting.Lifetime": "Debug"
		}
	},
	"LoggingProvider": {
		"Type": "HansKindberg.IdentityServer.Logging.Configuration.Log4NetOptions, HansKindberg.IdentityServer"
	},
	"RequestLocalization": {
		"DefaultRequestCulture": {
			"Culture": "en-001",
			"UiCulture": "en"
		},
		"FallbackToParentCultures": true,
		"FallbackToParentUiCultures": true,
		"RequestCultureProviders": [
			"HansKindberg.IdentityServer.Web.Localization.OpenIdConnectRequestCultureProvider, HansKindberg.IdentityServer",
			"Microsoft.AspNetCore.Localization.CookieRequestCultureProvider, Microsoft.AspNetCore.Localization"
		],
		" - RequestCultureProviders - more alternatives": [
			"Microsoft.AspNetCore.Localization.AcceptLanguageHeaderRequestCultureProvider, Microsoft.AspNetCore.Localization"
		],
		"SupportedCultures": [
			"en-001",
			"sv-SE"
		],
		"SupportedUiCultures": [
			"en",
			"sv"
		]
	},
	"Serilog": {
		"LevelSwitches": {
			"$controlSwitch": "Warning"
		},
		"MinimumLevel": {
			"ControlledBy": "$controlSwitch"
		},
		"Using": [
			"Serilog.Sinks.Console",
			"Serilog.Sinks.File"
		],
		"WriteTo": [
			{
				"Name": "Console"
			},
			{
				"Name": "File",
				"Args": {
					 "path": "Data/Log.txt"
				}
			},
			{
				"Name": "Seq",
				"Args": {
					"apiKey": "aaaaaaaaaaaaaaaaaaaaaaaaaaaaa",
					"controlLevelSwitch": "$controlSwitch",
					"serverUrl": "http://localhost:5555"
				}
			}
		]
	},
	"Users": [
		{
			"Email": "administrator@example.com",
			"Id": "40f297bb-47eb-464b-bb07-80b1ec3f862d",
			"Password": "P@ssword12",
			"UserName": "Administrator"
		},
		{
			"Email": "alice@example.com",
			"Id": "ebd32f4c-3ae8-41e9-aa05-d560758d6b1b",
			"Password": "P@ssword12",
			"UserName": "Alice"
		},
		{
			"Email": "bob@example.com",
			"Id": "32ac4b0e-003b-4c47-a386-ec48b782fe78",
			"Password": "P@ssword12",
			"UserName": "Bob"
		}
	]
}